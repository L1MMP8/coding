#include <iostream>
using namespace std;

class TreeNode {
public:

	int data;
	TreeNode* left;
	TreeNode* right;

	TreeNode(int value) : data(value), left(nullptr), right(nullptr){}
};

class BinaryTree {
public:

	TreeNode* root;

	void Rec(TreeNode*& node, int value) {
		if (node == nullptr) {
			node = new TreeNode(value);
			return;
		}

		if (value < node->data) {
			Rec(node->left, value);
		}
		else {
			Rec(node->right, value);
		}
	}


public:

	BinaryTree() : root(nullptr) {}

	void insert(int value) {
		Rec(root, value);
	}

	void printTree(TreeNode* node) {
		if (node == nullptr) {
			return;
		}

		std::cout << node->data << " ";
		printTree(node->left);
		printTree(node->right);
	}

	void print() {
		printTree(root);
		std::cout << std::endl;
	}
};

int main()
{
	BinaryTree tree;
	tree.insert(5);
	tree.insert(2);
	tree.insert(1);
	tree.insert(4);
	tree.insert(8);

	cout << "Binary Tree: ";
	tree.print();
}
